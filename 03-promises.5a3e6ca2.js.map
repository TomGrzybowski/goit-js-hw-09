{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,cAEtCF,EAAKI,iBAAiB,UAAUC,IAC9BA,EAAMC,kBAIR,WAEEH,EAAOI,aAAa,WAAY,IAGhC,MAAMC,EAAaR,EAAKS,SAASC,MAC3BC,EAAYX,EAAKS,SAASG,KAC1BC,EAAcb,EAAKS,SAASK,OAG5BC,EAAQC,OAAOR,EAAWS,OAC1BL,EAAOI,OAAOL,EAAUM,OACxBH,EAASE,OAAOH,EAAYI,OAGlC,GAAIF,EAAQ,GAAKH,EAAO,GAAKE,EAAS,EAGpC,OAFAI,EAAApB,GAASqB,OAAOC,QAAQ,4CACxBjB,EAAOkB,gBAAgB,WAAY,IAKrC,SAASC,EAAcC,EAAUb,GAC/B,MAAMc,EAAgBC,KAAKC,SAAW,GAUtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEL,SAAUA,EAAUb,MAAOA,IAErCmB,EAAO,CAAEN,SAAUA,EAAUb,MAAOA,GAAQ,GAE7CA,EAAM,G,CAMb,IAAK,IAAIqB,EAAI,EAAGA,EAAIjB,EAAQiB,IAC1BT,EAAcS,EAAI,EAAGhB,EAAQgB,EAAInB,GAC9BoB,MAAK,EAACT,SAAEA,EAAQb,MAAEA,MAEba,IAAaT,GACfX,EAAOkB,gBAAgB,WAAY,IAErCH,EAAApB,GAASqB,OAAOc,QACd,uBAAqBV,QAAiBb,MAAU,IAGnDwB,OAAM,EAACX,SAAEA,EAAQb,MAAEA,MACda,IAAaT,GACfX,EAAOkB,gBAAgB,WAAY,IAErCH,EAAApB,GAASqB,OAAOC,QACd,sBAAoBG,QAAeb,MAAU,G,CAxDpCyB,EAAgB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst button = document.querySelector('#submitter');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  const promises = createPromises();\n});\n\nfunction createPromises() {\n  //disable the button\n  button.setAttribute('disabled', '');\n\n  // get the input elements\n  const delayInput = form.elements.delay;\n  const stepInput = form.elements.step;\n  const amountInput = form.elements.amount;\n\n  // get the values from the input elements\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  //Catch wrong entries\n  if (delay < 0 || step < 0 || amount < 0) {\n    Notiflix.Notify.failure(`Please select values greater than 0`);\n    button.removeAttribute('disabled', '');\n    return;\n  }\n\n  //Create a single Promise\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position: position, delay: delay });\n        } else {\n          reject({ position: position, delay: delay });\n        }\n      }, delay);\n    });\n    return promise;\n  }\n\n  // Run the loop to create promises\n  for (let i = 0; i < amount; i++) {\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        //reenable the button after last promise\n        if (position === amount) {\n          button.removeAttribute('disabled', '');\n        }\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        if (position === amount) {\n          button.removeAttribute('disabled', '');\n        }\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$button","addEventListener","event","preventDefault","setAttribute","delayInput","elements","delay","stepInput","step","amountInput","amount","delay1","Number","value","$parcel$interopDefault","Notify","failure","removeAttribute","createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","i","then","success","catch","$47d4ff9957288465$var$createPromises"],"version":3,"file":"03-promises.5a3e6ca2.js.map"}